/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ghTools_GH */

#ifndef _Included_ghTools_GH
#define _Included_ghTools_GH
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ghTools_GH
 * Method:    getKeyDown
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_getKeyDown
  (JNIEnv *, jclass, jint);

/*
 * Class:     ghTools_GH
 * Method:    getKeyPress
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_getKeyPress
  (JNIEnv *, jclass, jint);

/*
 * Class:     ghTools_GH
 * Method:    getKeyPressed
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getKeyPressed
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    sendKeyPress
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ghTools_GH_sendKeyPress
  (JNIEnv *, jclass, jint);

/*
 * Class:     ghTools_GH
 * Method:    sendKeyDown
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ghTools_GH_sendKeyDown
  (JNIEnv *, jclass, jint);

/*
 * Class:     ghTools_GH
 * Method:    sendKeyUp
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ghTools_GH_sendKeyUp
  (JNIEnv *, jclass, jint);

/*
 * Class:     ghTools_GH
 * Method:    SetCursor
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_ghTools_GH_SetCursor
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ghTools_GH
 * Method:    getCursorPos
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_ghTools_GH_getCursorPos
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    openWindowName
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_openWindowName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ghTools_GH
 * Method:    openProcess
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_openProcess
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ghTools_GH
 * Method:    isConnected
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_isConnected
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getModuleBaseAddress
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ghTools_GH_getModuleBaseAddress__
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getModuleBaseAddress
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_ghTools_GH_getModuleBaseAddress__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ghTools_GH
 * Method:    readMemory
 * Signature: (JI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_ghTools_GH_readMemory
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     ghTools_GH
 * Method:    writeMemory
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_writeMemory
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     ghTools_GH
 * Method:    patchMemory
 * Signature: (J[B)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_patchMemory
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     ghTools_GH
 * Method:    nopMemory
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_nopMemory
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     ghTools_GH
 * Method:    getObjectAddress
 * Signature: (LghTools/GH/Pointer;)J
 */
JNIEXPORT jlong JNICALL Java_ghTools_GH_getObjectAddress
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ghTools_GH
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ghTools_GH_close
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getGamePID
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getGamePID
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    isGameVisible
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ghTools_GH_isGameVisible
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getGameHeight
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getGameHeight
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getGameWidth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getGameWidth
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getGameXPos
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getGameXPos
  (JNIEnv *, jclass);

/*
 * Class:     ghTools_GH
 * Method:    getGameYPos
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ghTools_GH_getGameYPos
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
